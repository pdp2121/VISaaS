<div class="wordcloud_div">
    <div id="word_cloud"></div>
    <div class="mb-5"> 
        <button onclick="updateWordcloud()">Update Cloud</button>
        <button onclick="downloadSVG()">Download as SVG</button>
    </div>
    <textarea id="inputwords"></textarea>
</div>

<script src="https://d3js.org/d3.v3.min.js"></script>
<script src="https://rawgit.com/jasondavies/d3-cloud/master/build/d3.layout.cloud.js"></script>

<script>
// Encapsulate the word cloud functionality
function wordCloud(selector) {

    var fill = d3.scale.category20();

    var svg = d3.select(selector).append("svg")
        .attr("width", 500)
        .attr("height", 500)
        .append("g")
        .attr("transform", "translate(250,250)");


    //Draw the word cloud
    function draw(words) {
        var cloud = svg.selectAll("g text")
                        .data(words, function(d) { return d.text; })

        //Entering words
        cloud.enter()
            .append("text")
            .style("font-family", "Impact")
            .style("fill", function(d, i) { return fill(i); })
            .attr("text-anchor", "middle")
            .attr('font-size', 1)
            .text(function(d) { return d.text; });

        //Entering and existing words
        cloud
            .transition()
                .duration(600)
                .style("font-size", function(d) { return d.size + "px"; })
                .attr("transform", function(d) {
                    return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
                })
                .style("fill-opacity", 1);

        //Exiting words
        cloud.exit()
            .transition()
                .duration(200)
                .style('fill-opacity', 1e-6)
                .attr('font-size', 1)
                .remove();
    }


    //Use the module pattern to encapsulate the visualisation code. We ll
    // expose only the parts that need to be public.
    return {

        //Recompute the word cloud for a new set of words. This method will
        // asycnhronously call draw when the layout has been computed.
        //The outside world will need to call this function, so make it part
        // of the wordCloud return value.
        update: function(words) {
            d3.layout.cloud().size([500, 500])
                .words(words)
                .padding(5)
                .rotate(function() { return ~~(Math.random() * 2) * 90; })
                .font("Impact")
                .fontSize(function(d) { return d.size; })
                .on("end", draw)
                .start();
        }
    }

}

//Some sample data - http://en.wikiquote.org/wiki/Opening_lines
var words = "When Mr. Bilbo Baggins of Bag End announced that he would shortly be celebrating his eleventy-first birthday with a party of special magnificence, there was much talk and excitement in Hobbiton."

//Prepare one of the sample sentences by removing punctuation,
// creating an array of words and computing a random size attribute.
function getWords() {
    return words
        .replace(/[!\.,:;\?]/g, '')
        .split(' ')
        .map(function(d) {
            return {text: d, size: 10 + Math.random() * 60};
        })
}

//Create a new instance of the word cloud visualisation.
var myWordCloud = wordCloud('#word_cloud');

myWordCloud.update(getWords())
document.getElementById('inputwords').value  = words;

function updateWordcloud(){
    words = $('textarea#inputwords').val();
    myWordCloud.update(getWords())
}

function downloadSVG() {
  let svg = document.getElementsByTagName('svg')[0];
  svg.setAttribute("xmlns", "http://www.w3.org/2000/svg")
  svg = svg.outerHTML
  const blob = new Blob([svg.toString()]);
  const element = document.createElement("a");
  element.download = "w3c.svg";
  element.href = window.URL.createObjectURL(blob);
  element.click();
  element.remove();
}
</script>